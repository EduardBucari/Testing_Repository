Техники тест-дизайна 
Динамическое Тестирование методом черного ящика.

Техники тест-дизайна | Тестирование состояний и переходов. Часть 4

Это более продвинутая и сложная техника тест-дизайна.
Эта техника помогает проанализировать систему с точки зрения бизнес логики,
иерархических отношений и сценариев.
Анализ основан на данных, организованных в таблицы, диаграммы и шаблоны.

Тестирование состояний и ререходов или
Тестирование переходрв между состояниями (State Transition testing) - это 
метод тестирования ПО или техника тест дизайна, при которой изменения 
входных условий вызывают изменения состояния в тестируемом приложении.
В этом методе тестировщик проектирует как позитивные, так и негативные 
входные значения тестов и фиксирует результат поведения системы.

Происходит тестирование следующих этапов:
- Состояние (state)
- Переход (transition)
- Событие (event)
- Действие (action)

Этот метод хорошо подходит там где необходимо рассматривать всю систему
в целом, отдельно взятый функционал в целом или для проведения 
N to N тестирования, когда польхователь выполняет ряд шагов по 
определенному сценарию.

- Состояние (state, представленное в виде круга на диаграмме) - это 
состояние приложнгтя, в котором оно ожидает одно или более событий.
Состояние помнит входные данные, полученные до этого, и показывает,
как приложение будет реагировать на полученные события.
События могут вызывать смену состояния и инициировать действия.

- Переход (transition, представлен в виде стрелки на диаграмме) - это
преобоазование одного состояния в другое, происходящее по событию.

- Событие (event, представленное над стрелкой) - это что-то, 
что заставляет приложение поменять свое состояние. 
События могут поступать извне приложения и генерироваться 
самим приложением (например, сообщенеим "истек таймер").
Когда проиисходит событие, приложение может поменять 
(или не поменять) состояние и выполнить (или не выполнить) действие.
События могут иметь параметры (например, событие "Оплата" может
иметь параметры "Наличные деньги", "Чек" или  "Кредитная карта").

- Действие (action, представлено после "/" над или под переходом) 
инициируется сменой состояния ("напечатать билет", "показать на экране"
и др.). Обычно действия создают что-то, что является выходными или
возвращаемыми данными системы (ответом сервера).
Действия возникают при переходах, сами по себе состояния пассивны.

На основании полученной схемы или таблицы составляется набор тестов
в зависимости от уровня покрытия.

4 основных Уровней покрытия тестами:

1. Набор тестов, в котором все состояния будут посещены как минимум 
один раз. Обычно это низкий уровень тестового покрытия.

2. Набор тестов, в котором все события выполнятся как минимум 
один раз. Следует отметить, что тест-кейсы, которые покрывают
каждое событие, могут быть точно теми же, которые покрывают каждое
состояние. Опять же, это низкий уровень покрытия.

3. Набор тестов, в котором все пути будут пройдены как минимум 
один раз. Несмотря на то, что этот уровень является наиболее 
предпочтительным из-за его уровня покрытия, это может быть
неосуществимо. Если диаграмма состояний и переходов содержит 
петли, то количество возможных путей может быть бесконечным.

4. Набор тестов, в котором все переходы будут осуществленны как 
минимум один раз. Этот уровень тестирования обеспечивает хороший 
уровень покрытия без порождения большого количества тестов.
Этот уровень, как правило, один из рекомендованных.
