Техники тест-дизайна 
Динамическое Тестирование методом черного ящика.

Техники тест-дизайна | Метод дерева классификации | 
Причина/Следствие | Часть 8.

Метод дерева классификации (Classification Tree Method) - 
разборка тестов методом черного ящика, в которой тестовые
сценарии, описанные средствами дерева классификации, 
разрабатываются для проверки комбинаций выборок входных
и выходных подмножеств.

Дерево классификации (Classification Tree) - структура, 
показывающая иерархически упорядоченные классы эквивалентности, 
которые используются для разработки тест-кесов в методе
дерева классификации (Classification Tree Method).

Для создания Дерева классификации используются дополнительные
инструменты - онлайн редакторы дерева классификации.

Дерево классификации позволяет определить недастоющие или 
избыточные тест-кейсы и лучше контролировать процесс тестирования
как отдельных модулей так и всей системы.
---------------------

Таблица причина следственных решений (decision table) - это техника
отражающая в таблице комбинации входных данных и причин с 
соответствующими выходными данными и действиями (следствием),
которая может быть использована для проектирования тестовых сценариев.

Это математическая взаимосвязь комбинаций и условий (причин) для 
получения ответа от системы (следствия).

Тестирование причино - следственного эффекта (Причина / Следствие) - 
это техника тест-дизайна, где для проектирования тест кейсов
используется графическое отображение входных данных (причин) и 
выходных данных (следствий).
В данной технике ширако используются логические операторы:
- и, или, не.
- истина, если не все входные данные верны ("не оба") (NAND).
- истина, когда ни один из входов не является 
  истиной ("ни один") (NOR).

Для отаброжения данной техники используется - "Диаграмма Исикавы".
Данная техника позволяет на раннем этапе выявлять недостатки
требований и спецификации.

Пример:
Причина - ввести данные нового пользователя (это действия,
каскад действий, Причина).
Следствие - новый пользователь появился в системе 
(присутствует в БД) (это результат наших действий т.е. следствие).

Для использования данной техники важно знать:
1. Какие параметры на входе (с чем оперирует данная функциональность). 
2. Какие данные на выходе (для чего вообще эта функциональность
и что она делает).
3. Какие входные параметры влияют на результат (условия).

Как и все техники тест дизайна, данная техника позволяет 
сделать наименьшее колличество тестов и при этом найти 
больше дефектов.

Позволяет обнаружить недостатки в логике приложения.

Недостатком данного подхода является плохое исследование 
предельных условий.