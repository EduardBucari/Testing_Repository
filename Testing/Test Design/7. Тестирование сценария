Техники тест-дизайна 
Динамическое Тестирование методом черного ящика.

Техники тест-дизайна | Тестирование сценария | 
Тестирование пользовательского пути | Часть 7

Тестирование сценария - это техника, в которой используются
сценарии: гипотетические истории, помогающие тестировщику
работать со сложной проблемой или тестовой системой.

Тест-кейс - это отдельный тестовый случай, который подразумевает
одну проверку.
Тестовый сценарий - складывается из нескольких тестовых случаев или
содержать в себе некоторое колличество шагов, выполнение которых
приводит к определенному ожидаемому результату.
Сценарий - это путь пользователя в системе, в ходе которого выполняется 
не одна, а несколько проверок в рамках одной конечной цели, 
и может охватывать несколько компонентов системы.
Так же любая тестируемая функциональность называется сценарием тестирования
если она тестируется в целом. 

Тестирование Сценария помогает простым способом тестировать 
более сложные системы.
Эта техника уменьшает повторную работу и упрощает прохождение сложных 
структурных тестов.

Цель Тестирования Сценария:
Избежать пошаговых длинных инструкций по тестированию с ожидаемыми
результатами, вместо этого заменить их описанием, которое давало бы 
больше свободы тестировщику, ограничевая объем и детализацию
тестов и при этом экономить время.

Данная техника испльзуется как в ручном, так и в автоматизированном 
тестировании.
----------------------

Плюсы создания и использования тестовых сценариев:

1. Созданеи тестовых сценариев обеспечивает полное покрытие тестами.
2. Позволяет в кротчайшие сроки проводить тестирование критически
   важного функционала.
3. Позволяет проводить быстрое изучение и понимание продукта или
   отдельно взятого функционала.
4. Существенно экономит время, трудозатраты, облегчает планирование
   и организацию тестирования в команде.
5. Позволяет проводить сквозное EndToEnd тестирование.
6. Позволяет воспроизводить нетривиальные действия пользователя 
   в системе, что позволяет выявлять дополнительные дифекты.
----------------------

Минусы использования тестовых сценариев:

1. Если в проекте разработка ведется с использованием гибких
методологий, например Scrum, то в процессе разработки вносят
множество изменений в систему. И сценарии, особенно длинные,
будут постоянно не актуальны и будут требовать частого аудита,
правок, мониторинга, что может существенно увеличить время тестирования.
2. Сокращение детализации тест-кейсов в пользу увеличения шагов в 
сценарии, может позволить пропустить баги.
--------------------

Тестовые сценарии могут быть:
1. Системные.
2. На основе использования и ролей. 

1. Системные сценарии охватывают несколько компонентов системы.
(Например покупка товара может включать поиск товара, выбор параметров
товара, перенос в карзину, процедуру оплаты, оформления доставки и т.д.)
Здесь могут использоваться линии поведения пользователей в системе и
переходы между состояниями.

2. Сценарий на основе использования и ролей - фокусируется на том, как 
пользователь использует систему в разных ролях и с разной средой.
---------------------

Рекомендации по созданию тестовых сценариев:

1. Четко придерживайтесь требований к системе.
2. Каждый тестовый сценарий должен быть привязан как минимум
к одному требованию или пользовательской истории в соответствиии 
с методологией проекта.
3. Перед созданием тестового сценария, который проверяет несколько
требований одновременно, убедитесь, что у вас есть тестовый сценарий, 
который проверяет это требование изолированно, т.е. в первую очередь,
создавайте короткие сценарии для одного требования, в рамках одного 
функционала.
4. Избегайте созданеи слишкрм сложных и длинных тестовых сценариев,
охватывающих несколько требований.
5. Запускайте сценарий, исходя из приоритетов клиента, критичности, 
важности. Запускайте только выбранные тестовые сценарии, которые
актуальны на текущий момент.
6. Создавайте сценарий, которыми смогут воспользоваться все 
заинтересованные лица, т.е. сценарии должны быть понятны и доступны.
7. Сверяйте и корректируйте сценарий с матрицой отслеживания, 
чтобы убедиться, что каждому требованию соответсвует сценарий 
тестирования.

----------------------
Первый пример тестового сценария в рамках одного функционала - 
АУТЕНТИФИКАЦИЯ ПОЛЬЗОВАТЕЛЯ В СИСТЕМЕ.
(Мы проводим действия и проверяем поведение системы в ответ
на выполнение этих действий.)
(Подобный сценарий создается без подробной детализации каждого шага).

1. Поведение приложения при вводе действительного логина и 
действительного пароля.
2. Поведение приложения при вводе действительного логина и 
неверного пароля.
3. Поведение приложения при вводе неверного логина и 
действительного пароля.
4. Поведение приложения при вводе неверного логина и 
неверного пароля.
5. Поведение приложения при входе путем логина без пароля.
6. Поведение приложения при входе путем ввода пароля без логина. 
7. Поведение приложения при входе в систему без ввода логина и пароля.
8. Поведение приложения при сбросе пароля.
-----------------------

Второй пример тестового сценария в рамках одного функционала - 
ДОБАВЛЕНИЕ ТОВАРА ПРОДАВЦОМ В ИНТЕРНЕТ МАГАЗИН.

1. Вход в систему, как продавец.
2. Добавление номенклатуры товара в соответствующий раздел.
3. Указание количества товара на складе.
4. Указание доступности товара для заказа.
5. Указание цены товара (за одну единицу и оптом).
6. Добавление описания и характеристик товара.
7. Добавление фото товара.
8. Добавление способа оплаты и доставки, возврата.
9. Проверка доступности товара для покупателя.
10. Проверка возможности покупки товара.

Вход в ситему (шаг 1.) описывается как один шаг, но этот шаг состоит 
из 8 шагов из первого примера.
----------------------

Примеры данных сценариев можно отнести к пользовательским сценариям
и эта техника называется Тестирование пользовательского пути.

Тестирование пользовательского пути (проходим по системе как 
пользователи) - это когда моделируются сценарии
поведенческой модели действий пользователя в системе.
На основе предполагаемых действий пользователей формируется 
тестовые сценарии.

Чаще всего, это самый сложный способ путешествия пользователя по 
системе и подразумевает большое количество шагов и взаимодействие 
нескольких модулей, когда проверяется большая часть функциональности
в одном сценарии.

Эти сценарии не связаны с пользовательским историями (user story),
В эти сценарии входят сквозные тесты и в них наиболее большой 
процент покрытия, по сравнению с другими методами.

Так же в пользовательский сценарии добавляется негативный сценарий 
пользовательского опыта работы в системе (нерациональные действия,
которые приводят к сбою системы).