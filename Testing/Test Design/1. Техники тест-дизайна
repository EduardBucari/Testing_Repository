Канал All about QA.
Тест-дизайн. Техники тест-дизайна. Часть 1

Тест дизайн - это процесс проектирования тестовой документации и 
тестовых сценариев (тест кейсов).

Тест дизайн - это этап процесса тестирования ПО, на котором проектируются 
и создаются тестовые сценарии в соответствии с определенными ранее критериями
качества целями тестирования.

Без правильного подхода к техникам тест дизайна мы не сможем построить
правильный процесс обеспечения качества продукта.
Просто проводя рандомные тесты мы не сможем дать првильную отценку нашему 
продкту и узнать на сколько он качественный.

--------------------
Метрики тест дизайна.
Для понимания того, что мы делаем нашу работу качественно и на каком этапе
тестирования мы находимся - существуют метрики, которые отслеживают тестовое
покрытие:
- Метрика покрытия кода тестами (code coverage)
- Метрика покрытия тастами требований (requirements coverage)

Метрика покрытия кода тестами (code coverage) относится к модульным
тестам (unit tests), которые пишут разрабртчики и определяется как 
отношение строк кода которые покрыты тестами к общему количеству 
строк исполняемого кода и умноженное на сто. 
В итоге мы получаем процент покрытия. Результат выражается в процентах.
Tcov = (Ltc / Lcode) * 100%;
Tcov - тестовое покрытие
Ltc - число охваченных проверкой строк кода
Lcode - суммарное количество строк кода.

Метрика покрытия тастами требований необходима для тестировщиков.
Она позволяет не пропустить в процессе проектирования тестов функционал
нашего продукта и проанализировать работу на любом этапе и предоставить
отчет о ходе тестирования заинтересованным лицам.
Не выражается в процентах, так как мы должны протестировать все требования.
Для контроля за тестированием требований используется 
матрица тестового покрытия требований (Requirements Traceability Matrix).

Именно использование определенных техник тест дизайна поможет подготовит
наиболее качественное и оптмальное покрытие требований и провести тестирование
с обеспечением максимального результата по выявлению дефектов.
-----------------------
Задачи тест-дизайна.
1. Анализ требований и рисков тестирования.
2. Определение проверок для тестирования.
3. Формализация проверок в виде тестовых сценариев.
4. Приоритезация проверок.
5. Определение подходов к тестиророванию.
-----------------------

Техники тест-дизайна существуют: СТАТИЧЕСКИЕ И ДИНАМИЧЕСКИЕ

1. Статическое тестирование проиизходит без запуска кода, состоит из:
Техники Reviews и Техники статического анализа. Эти техники
относятся к работе разработчиков.

При статическом тестировании код не запускается, основная цель
этого тестирования повысить качество программных продуктов путем 
выявления ошибок на ранних этапах цикла разработки.

Это тестирование так же можно назвать верификацией, мы проверяем
правильно ли мы делаем наш продукт согласно документации.
При статическом тестировании проверяются:
- Модульное тестирование (Unit Tests)
- Требования бизнес документации (BRD-Business Requirements Document)
- Структура базы данных
- Прототипы
- Документация для пользователя
- Тест план и тестовая стратегия
- Тест-скрипты для автоматизированного тестирования.

2. При динамическом тестировании проверяется:
- Как выполняется код
- Функциональное поведение ПО
- Использование памяти / процессора
- Общая производительность системы.

Основная цель динамического тестирования - подтвердить, что программный 
продукт работает в соответствии с требованиями. 
Динамическое тестирование так же называется Execution technique (техника
выполнения) или Validation т.е. мы проверяем понравится ли наш продукт
пользователям.

Динамическое тестирование выполняется на всех уровнях тестирования и 
включает в себя тестирование методами белого ящика, черного ящика, 
и тестирование на основе опыта.
 
Тестированием методом белого ящика в основном заняты програмисты.

К техникам тест-дизайна основаным на опыте (Experience-based) относятся:
- Предугадывание ошибок (Error Guessing - EG)
- Исследовательское тестирование (Exploratory testing)
- Ad-hoc testing
- Smoke Testing

Тестирование методом черного ящика (Black-box, Specification-based) 
включает в себя следующие техники тест-дизайна:
- Эквивалентное Разделение