Техники тест-дизайна.

Большенство процессов тестирования уже давно разработаны
и широко применяются. Однако, Тест-дизайн отвечает на вопрос 
Как придумываются тесты ?

- Исчерпывающее тестирование (максимально возможное, занимает очень много времени
  и практически нигде используется).
- Верификация (верно ли работает функционал) и
  Валидация (получился ли результат таким каким мы хотели)

  Техники тест-дизайна:
1. - Классы эквивалентности (доступ одтин класс 18+ , дргой класс меньше 18 лет) и 
   - Граничные значения (Например граница диапазона 18 лет - это 17 и 19, 
   также ноль отрицательные значения)
2. Таблица принятия решений (специальная таблица заполняется + или -)
3. Сценарная техника (разработка теста на основании сценария поведения 
   пользователя, как позитивного так и негативного сценария)
4. Техника ADHOC (эдхок) (буз какой либо документации открывается приложение и
    тестируется по спонтанному сценарию, как вам хочется. Вы становитесь на место 
    пользователя, который впервый раз открыл это приложение и имеет определенную
    цель - совершить покупку и методом тыка пытается это сделать.)
5. Предугадывания ошибок - техника для опытных тестировщиков, которые заранее 
   могут найти уязвимые и критические места в программе в кротчайшие сроки.
6. Попарное тестирование -  Есть специальные программы которые
   делают такого рода проверки - автоматически 
   (pairwise generator online (slothman)).
7. Доменный анализ - комбинация из вышеперечисленных техник 1 и 6.
   (пользы мало, а ошибиться очень легко) Данная техника в основном 
   применяется тест-аналитиками, а не тестировщиками.
8. Причина / Следствие (причина - клик по кнопке style и следствие - появляется
   окно с множеством стилей оформления цветовой темы)
9. Состояния и перехода.

