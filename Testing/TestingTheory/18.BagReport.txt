BAG REPORT (Документ для фиксации и поиска дифектов)

Дефект или баг это недостаток в рабочем продукте, который не соотвествует
требованиям или спецификации.
Дефект - это когда ожидаемый результат не соответсвует фактическому результату.

BAG REPORT - документ для фиксации не корректной работы объекта тестирования,
с указанием причин и ожидаемого результата.

Кто заводит BAG REPORT ?
- Тестировщики (всегда)
- Разработчики (редко)
- Тех поддержка (команда соправождения)
- Продавцы
- Заказчик
- Пользователь

Где заводят BAG REPORT ?
Как правило все BAG REPORT заводятся в баг-трекере:
- JIRA
- Redmine
- Mantis
- Exel

- ClickUp/Abedatool

Локализация дифекта
Мало найти дифект и написать что этот клик авторизации не работает.
Нужно локализовать дифект и описать например, что этот дифект произошел 
на стороне фротенда, т.е. фронтэнд не отправляет запрос на бекэнд для авторизации.
Важно описать не общую а конкретную проблему и проверить есть ли такая же проблема
на других браузерах и на других устройствах и версий ПО.
Локализация и подробное описание дифекта важны с точки зрения быстого
решения этой проблемы.


Основные атрибуты BAG REPORT
- Идентификатор
- Заголовок
- Шаги воспроизведения
- Актуальный результат
- Ожидаемый результат
- Окружение
- Критичность
- Приоритет


Дополнительные атрибуты BAG REPORT
- Скриншоты, видео
- Возможность обойти баг
- Воспроизводимость
- Комментарии
--------------------------------------------------------------

Заголовок (Summary) должен отвечать на следующие вопросы:
- Что произошло ? 
- Где произошло ?
- При каких условиях ?
Пример: Нет логотипа на главной странице, если пользователь с ролью user.


Плохие заголовки (не дают явного понимания проблемы)
х не работает поиск
х приложение не работает
х орфографическая ошибка
-------------------------------

Шаги воспроизведения:
- Описывайте каждое действие в отдельном шаге
- Описывайте безличные формулировки призывающие к действию
- Описывайте каждый шаг, пока не столкнетесь с дифектом и остановитесь.
- Найдите кротчайший путь воспроизведения
- Найдите точный путь воспроизведения
- Пишите так, чтобы любой новичок мог его воспроизвести


Пример BAG REPORT
Заголвок - Не отображается логотип на главной странице профиля/

Шаги воспроизведения:
1. Перейти по ссылке: https://example.com
2. Ввести логин "login"
3. Ввести пароль "password"
4. Кликнуть sign in

Актуальный результат: В левом верхнем углу вместо 
логотипа - пусто(см. Скриншоты 1)
Ожидаемый результат: В левом верхнем углу находится логотип (согласно треб.).
------------------------------------------
Так же важными отрибутами отценки являются:
Severity (Критичность) - степень влияния дефекта на работу системы
01 Blocker
02 Critical
03 Major
04 Minor
05 Trivial

01 Blocker - ошибка блокирующая работу приложения. После этого дефекта мы 
             не можем продолжать работать с системой в целом или конкретной 
             важной функциональностью. 
             Для продолжения тестирования, необходимо исправление этого дифекта.
             Может измениться на Critical, если найден обходной путь.

02 Critical - критическая ошибка.
              Неправильно работающая бизнес-логика.
              Дыра в системе безопасности.
              Проблема приводит к временному падению сервера или приводит в 
              нерабочее состояние часть системы.

03 Major (мэйжор) - значительная ошибка.
             Часть основной бизнес логики работает не корректно.
             Есть возможность работать с тестируемым объектом,
             используя другие тестовые данные.
             Ставится в случаях, когда функционал может работать при одних
             условиях, но падает при других.

04 Minor - незначительная ошибка.
             Не нарушает бизнес-логику.
             Очевидная проблема UI/UX (юзабилити и интерфес)
             Грамматические ошибки.

05 Trivial - тривиальные ошибки
             Не затрагивают функциональность системы
             Проводит к ошибкам в сторонних программах, но не в нашей
             Опечатки, пропуски пробела.
             Не значительные отклонения верстки.
------------------------------------------------

Priorety (Приоритет) - очередность выполнения задачи или устранения дефекта.
Чем выше приоритет, тем быстрее нужно исправить дефект или влияние дефекта 
на бизнес.

01 High
02 Normal
03 Low 

01 High - Ошибка должна быть исправлена как можно быстрее , 
          так как ее наличие является критической для проекта.
          
02 Normal - Ошибка должна быть исправлена, ее наличие не является 
          критической для проекта но требует обязательного решения.

03 Low - Ошибка должна быть исправлена, ее наличие не является 
          критической для проекта и не требует срочного решения.

----------------------------

Советы
1. Упрощайте шаги, чем длинее описание шага тем хуже.
2. Для одного дефекта пишется один багрепорт.
3. Багрепорт должен быть очевидным и понятным.

Основные ошибки при сотавлении багрепорта
- Недостаточно предоставленных данных.(что, где, когда)
- Название репорта и ожидаемый результат не соответствуют друг другу.
- Завышение или занижение Siverity (серьезность влияния на систему).
- Неверное употребление терминологии.
- Отсутствует ожидаемый результат.
- Критика програмиста.