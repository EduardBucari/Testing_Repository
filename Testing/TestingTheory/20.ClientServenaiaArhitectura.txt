Клиент серверная архитектура.

Любое приложения которое мы видим на экране
монитора или смартфона состоит из 3 частей:
1. Представление - интерфейс у клиента в виде картинки, текста и кнопок.
2. Конролер (сервер отвечающий за логику)- логичаская часть, 
   например мы наводим курсорна кнопку,
   она изменяет цвет и при нажатии мы переходим на другой логический шаг.
3. Данные, которые хранятся на серверах в виде баз данных (тест, фото и т.д.).

Клиент серверная архитектура - это взаимодействие этих трех элементов.
Все эти три части разделены между сабой, между клиентом и сервером.

Сервер это мощная машина, основной задачей которой является 
обработка определенной логики.

Клиент это не человек и сервер это не компьютер. И клиент и сервер это 
просто софт, т.е. это програмное обеспечение.
С точки зрения тестировщика, клиентом является браузер, который взаимодействует
с сервером при помощи запросов по определенным правилам или протоколам.

В современной технике клиент также содержит в себе простую и сложную логику.
Чем отличается толстый клиент от тонкого?
Толстый клиент содержит в себе горазда больше логики чем тонкий.

Пользователь не является клиентом с точки зрения архитектуры.
Клиентом является браузер или другое приложение, которое общается с сервером.

Задача клиента:
Отправить запрс на сервер, получить данные от этого сервера,
понять эти данные и отаброзить их на экране.

В общем схема следующая (3 уровня, 2 звена):
(В трех звенной архитектуре добавляются балансировщики)

Пользователь обращается  к клиенту (браузеру) за информацией.
Клиент (через балансировщика) отправляет запрос не сервер, 
сервер (также через балансировщика) обращается к базе данных.
Сервер получает данные из базы, и отправляет эти данные клиенту.
Клиент отаброжает эти данные пользователю на экране.

Первое звено это клиент, второе звено это сервер с БД.
Первый уровень - представление,
Второй уровень - бизнес-логики,
Третий уровенб - уровень БД.

Сервер необходим только потому что в один момент пользователей и клиентов 
обращаемых к базе данных очень и очень много. Существуют балансировщики,
которые ругулируют потоки.

Набор серверов и баз данных называется кластером.
существует два типа кластеров:
1. activ - activ (все сервера одновременно работают и балансировщик 
                  с каждым из них общается)
2. activ - pasiv (работает только часть серверов и остальные включаются только 
                  тогда, когда в них появляется необходимость)

