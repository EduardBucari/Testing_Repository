Модели разработки программного обеспечения.

Концепции
коммерческое готовое программное обеспечение (COTS), 
итерационно-инкрементная производственная модель, 
валидация, верификация, V-обоазная модель.

Тестирование не проводится изолированно. Деятельность по тестированию связана с
разработка программного обеспечения. Разные модели разработки ПО требуют разных
подходов к тестированию.

Основные Модели разработки программного обеспечения:

1. Модель V (последовательная модель)
Наиболее распространенная модель V имеет четыре уровня тестирования, 
соответствующие четырем уровням разработки программного обеспечения.
(Тестируется каждый этап разработки)

2. Итеративно-инкрементные модели
Итеративно-инкрементная разработка программного обеспечения — это процесс 
сбора требований, проектирования, построение и тестирование системы.  
Эти этапы организованы в более короткие циклы разработки.

Уровни тестирования:

Концепции
альфа-тестирование, бета-тестирование, модульное тестирование, драйвер, 
полевое тестирование, функциональное требование, интеграция, интеграционное 
тестирование, нефункциональные требования, тест на помехоустойчивость, 
системные тестирования, тестовая среда, уровень тестирования, производство
тестирование, приемочное тестирование пользователей.

Для каждого уровня тестирования вы можете пределить: общие цели, продукты на основе
которых вы создаете тестовые случаи (основа тесты), предмет тестов (что тестируется),
типовые дефекты и неисправности, которые необходимо обнаружить, требования
к тестам и инструментам, тестовая среда, особый подход, обязанность.

Существует 4 основных уровня тестирования:

1. Тестирование модуля.
Тестирование модуля заключается в поиске ошибок и проверке работоспособности 
отдельных и небольших компонентов программного обеспечения 
(например, модули, программы, объекты, классы), которое можно тестировать отдельно.

2. Интеграционные тесты.
Интеграционные тесты проверяют интерфейсы между модулями, взаимодействие с
другими частями системы (такие как операционная система, файловая система и 
оборудование) и интерфейсы между системами.

3. Системные тесты. 
Системные тесты имеют дело с поведением системы/продукта. Объем тестов должны 
быть четко определен в генеральном и в индивидуальном плане тестирования.

4. Приемочное тестирование. 
Ответственность за приемочное тестирование часто лежит на клиентах или
пользователях системы. Другие заинтересованные стороны также могут быть вовлечены. 
Цель данного тестирования это быть уверенным в системе, ее частях или определенных 
нефункциональных атрибутах.

Типы тестирования.
Концепции
тестирование черного ящика, покрытие кода, функциональное тестирование, 
тестирование совместимости, нагрузочное тестирование, тестирование ремонтопригодности,
тестирование производительности, тестирование переносимости, тестирование надежности, 
тестирование безопасности, тестирование перегрузки, структурное тестирование, 
тестирование удобства использования, тестирование белого ящика.

Выделяют 5 основных типов тестирования:

1. Функциональное тестирование (Functional Testing).
Функциональное тестирование относится к функции (задокументированные или 
подразумеваемые тестировщиками) и их взаимодействие с
другими системами. Функциональное тестирование может выполняться на всех уровнях 
(например, модульное тестирование может в зависимости от характеристик модуля).

2. Тестирование нефункциональных атрибутов (нефункциональное тестирование). 
Нефункциональное тестирование это проверка того, «как» работает система. 
Нефункциональное тестирование может быть выполняться на всех уровнях тестирования. 
Термин нефункциональные тесты означает тесты требуемые для измерения свойств 
систем и программного обеспечения.

3. Тестирование структуры/архитектуры ПО (структурное тестирование). 
Структурное тестирование(напимер белый ящик) может быть выполнено на любом уровне 
тестирования. Структурные методы лучше всего использовать после методов, 
основанных на спецификации, для измерения точности
тестирование путем оценки степени покрытия выбранного типа конструкции.

4. Тестирование, связанное с изменениями.
(подтверждающее тестирование и регрессионное тестирование) 
Регрессивным тестированием является повторение тестов на уже протестированной 
программе, выполненное после модификаций для обнаружения новых неисправностей 
или неисправностей, выявленных в результате внесенных изменений.

5. Эксплуатационное тестирование.
Эксплуатационное тестирование выполняется в операционной системе в результате 
модификации, переноса или утилизации программного обеспечения или системы.