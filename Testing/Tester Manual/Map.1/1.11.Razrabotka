Процесс разработки теста
Концепции
спецификация тестового примера, дизайн теста, график выполнения теста, 
спецификация процедуры тестирования, тестовый сценарий, отслеживание.

Во время тестового анализа документация по тестовой базе просматривается, 
чтобы определить, что необходимо сделать или испытать, то есть условия испытаний. 
При разработке тестов вы создаете и описываете тестовые случаи и тестовые данные. 
Тестовый пример состоит из: 
- набор входных значений,
- предварительные условия, 
- ожидаемые результаты и условия завершения, созданные для покрытия 
определенных целей тестирования 
- условия тестирования.

Категории методов тестирования.
Концепции
метод проектирования тестовых случаев методом черного ящика, 
метод проектирования тестов, основанный на опыте, 
тестовый дизайн, метод проектирования тестовых случаев белого ящика.

Целью методов проектирования тестирования является определение тестовых условий, 
тестовых случаев и тестовых данных.
Классическое деление различает методы «черного ящика» и «белого ящика».
- Методы черного ящика по определению не используют никакой структурной информации
внутри тестируемого модуля или системы.
- Методы проектирования тестов белого ящика основаны на анализе структуры модуля 
или системы.
---------------
Методы на основе спецификаций или «черного ящика»
Концепции
Анализ граничных значений, тестирование таблицы решений, 
разделение эквивалентности, тестирование перехода состояния,
тестирование на основе вариантов использования.

1. Разделение эквивалентности
В классификации эквивалентности входные данные программы или системы делятся 
на группы, которые вызывают подобное поведение программного обеспечения, 
поэтому весьма вероятно, что они обрабатываются одинаково.

2. Анализ граничных значений
Программное обеспечение, скорее всего, будет работать неправильно для
значения на краях классов эквивалентности, чем в середине, поэтому тестирование 
этих областей скорее всего обнаружит ошибки.

3. Тестирование на основе таблицы решений
Таблицы решений — хороший способ зафиксировать системные требования, 
которые они содержат, логические зависимости и задокументировать внутреннюю 
структуру системы. Может использоваться для написание сложных бизнес-процесов, 
которые будут поддерживаться системой.

4. Тестирование переходного состояния
Система может реагировать по-разному в зависимости от текущих условий и истории. 
В этом случае поведение системы можно описать диаграммой переходов состояний. 
В схеме состояний показаны зависимости между состояниями и входными данными 
и могут выделять недопустимые переходы.

5. Тестирование на основе вариантов использования
Тесты могут быть разработаны на основе вариантов использования. 
Вариант использования описывает взаимодействия между субъектами (пользователями 
или системами), которые производят результат и имеют ценность с точки зрения 
пользователя или клиента. Каждый вариант использования имеет предварительное 
условия, которое должно быть выполнено. 
В любом случае использование заканчивается постусловиями. Это видимые результаты 
его реализации и его состояния системы в конце варианта использования.
Сценарии использования очень полезны при разработке приемочных тестов.
---------------

Методы на основе структуры или белого ящика.
Концепции
покрытие кода, покрытие решений, покрытие операторов, 
тестирование на основе структуры.

Тестирование на основе структуры (белого ящика) основано на прозрачной структуре
программного обеспечения или системы.

В рамках курса тестировщика мы будем использовать структуру, описываемую псевдокодом.
Псевдокод содержит конструкции, позволяющие выразить все основные структуры и
элементы управления, которые можно найти в языках программного обеспечения. 
Однако его код не интерпретируются любым компилятором.
Мы также создадим базовые блок-схемы для анализа покрытия решений.

1. Тестирование и покрытие инструкций
При тестировании инструкций используется покрытие инструкций, которое является 
мерой того, какой процент инструкций исполняемые операторрами были проверены 
набором тестов. Наша работа этосподготовка такого набора тестов, чтобы охватить 
как можно больше инструкций (кода) при наименьшем количестве тестовых случаев.

2. Тестирование и покрытие решений
Тестирование принятия решений является одной из форм тестирования потока управления, 
через точки принятия решений. 
Покрытие решений сильнее, чем ручная инструкция. 
100% покрытие решений гарантирует 100% покрытие инструкций, но не наоборот.
--------------------

Методы, основанные на опыте.
Концепции
исследовательское тестирование, атака (багги)

Тестирование, основанное на опыте, — это когда тесты разрабатываются на основе
знания и интуиции тестировщиков, а также их опыт работы с аналогичными приложениями 
и технологиями. 
Широко используемая техника - угадывание ошибок. 
В целом предсказать сбои на основе их опыта.

Исследовательское тестирование основано на параллельной разработке тестов, 
их выполнении, записи результатов и обучении на основе порядка тестирования, 
включающего цели тестирования и придерживаясь временных рамок.

В рамках мастер-классов курса Manual Tester - мы будем использовать 
исследовательское тестирование. Мы будем учиться, создавать тест-кейсы и выполнять 
одновременно тесты.
---------------------

Выбор метода тестирования зависит от ряда факторов:
- тип системы,
- правовые нормы,
- требования заказчика или контракта,
- тип и уровень риска,
- цель испытаний,
- документации,
- знания тестировщиков,
- время и бюджет.