Как мы будем работать с SQL?

ВАЖНО!
Сначала выберите базу данных, в которой вы хотите выполнять команды SQL. 
Для этого в разделе SCHEMAS дважды щелкните выбранную базу данных. 
Раздел SCHEMAS будет содержать все базы данных, к которым у пользователя есть доступ.

Чтобы создать новый запрос (файл SQL), выберите значок SQL (с плюсом).
Все запросы и команды SQL должны быть записаны в только что созданный 
файл запроса (файл SQL).
После ввода правильной команды SQL запустите команду, щелкнув значок «молния».
----------------------
Что скрывает БД ? 
В нашем случае у нас есть диаграмма, где нарисованы все таблицы в базе данных, 
над которыми мы собираемся работать. Это очень удобный случай, но, к сожалению, 
так будет не всегда.
К счастью, на помощь приходит SQL. В нем есть специальный запрос, который покажет 
нам все таблицы, которые есть в базе. Это: 
SHOW TABLES;
Результат такого запроса отображает нам имена всех таблиц, которые есть в системе.
Помните о точке с запятой в конце — без нее запрос не будет выполнен!
Запустите команду в MySQL Workbench.
------------------------
Что находится в таблице?
Раз мы знаем имена наших таблиц, мы все равно должны знать, из каких столбцов 
они состоят. Опять же в SQL для этого есть специальный запрос. Это:
Describe <tables name>;
вместо <имя таблицы> мы вводим имя одной из таблиц в базе данных (без > и <).
Например:
Describe Classes;
Мы должны получить информацию о том, какие столбцы есть в данной таблице.

После ввода соответствующего запроса отобразится таблица со следующими столбцами:
Field - имя столбца в таблице, которую мы запрашиваем.
Type - тип данных хранится в этой колонке.
Null - может ли столбец быть пустым? Если здесь введено NO, это означает, 
       что этот столбец является обязательным и записи без данных для этого столбца 
       приниматься не будут.
Key - является ли этот столбец первичным или внешним ключом.
Default - установлено ли для этого столбца значение по умолчанию?
Extra - дополнительная информация о колонке.
-------------------------
Типы данных в MySQL (три основные группы):
1. Числовые переменные.
2. Дата и время.
3. Строковые переменные.
Каждый тип данных имеет диапазон, который он хранит, разные типы данных занимают 
разное количество памяти на диске сервера.
Тип данных должен быть настроен на то, какой диапазон данных должен храниться 
в данном столбце.
Если мы используем числа от 0 до 100 давайте использовать TINYINT вместо INT
это занимает меньше места.

Все типы переменных:

INT - числовая переменная.
Сохраняет целые числа в диапазоне: –2 147 483 648 до 2 147 483 647
Мы не можем использовать отрицательные числа тогда диапазон от 0 до 4 294 967 295
 
TINYINT - Сохраняет целые числа в диапазоне: от –128 до 127.
Мы не можем использовать отрицательные числа, тогда этот интервал равен от 0 до 255.

SMALLINT - Сохраняет целые числа в диапазоне: от - 32 768 до 32 767
или 0 до 65 535

MEDIUMINT - Сохраняет целые числа в диапазоне: от –8 388 608 до 8 388 607
или 0 до 16 777 215

BIGINT - 

FLOAT(M, D) - переменная, представляющая число с плавающей запятой.
M - количество всех отображаемых цифр,
D - количество знаков после запятой, может содержать до 24 знаков после запятой.
FLOAT(5, 3) - означает 5 цифр, включая 3 десятичных знака - 34 023.

DOUBLE(M, D) - более точное число с плавающей запятой. Он может содержать 
до 53 знаков после запятой.
REAL - является синонимом переменной типа DOUBLE.

DECIMAL(M, D) - число с плавающей запятой, для которого мы не используем сжатие, 
содержит точное число. NUMERIC синоним DECIMAL.
DECIMAL следует использовать для хранения, например, цен или
обменные курсы, мы никогда не используем FLOAT!!!, который хранит приблизительное 
значение.

DATE - хранит дату в формате  yyyy-mm-dd

TIME - хранит время в формате   hh:mm:ss

DATETIME - хранит дату в формате  yyyy-mm-dd и время hh:mm:ss

TIMESTAMP - хранит дату и время в формате  yyyy-mm-dd hh:mm:ss

YEAR(M) - сохраняет год в двух- или четырехзначном формате. 
Двузначный формат устарел с версии

CHAR(M) - строка с заданным количеством символов, параметр M принимает 
значение от 0 до 255. Заполняется пробелами, если строка короче. 
Пробелы автоматически удаляются при извлечении данных из базы данных. 
Занимает фиксированный объем памяти для заданной длины.

VARCHAR(M) - строка с переменным количеством символов, но не более указанного 
параметра M (со значением от 0 до 65 535). Занимает переменный объем памяти 
для заданной длины.

BLOB (Binary Large Object) или TEXT - поле содержащее до 65 535 знаков.
BLOB отличается от переменной TEXT тем, что BLOB не чувствителен к регистру.

TINYBLOB или TINYTEXT - максимальная длина 255 символов.

MEDIUMBLOB или MEDIUMTEXT - максимальная длина 16 777 215 символов.

LONGBLOB или LONGTEXT - максимальная длина 4 294 967 295 символов.

