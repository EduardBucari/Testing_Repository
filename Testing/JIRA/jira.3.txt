JIRA Базовый курс - pre-AGILE методологии разработки. 
Их модели и Унифицированный процесс.

Рассмотрим следующие модели разработки:
1. Каскадная модель / Водопад
2. V-образная модель
3. Пилообразная модель
4. Спиральная модель
5. Унифицированные процессы. 

Все мотодологии разработки делятся на 3 подгруппы:
- Линейный процесс (1. Каскадная модель / Водопад; 2. V-образная модель;
                    3. Пилообразная модель).
- Спиральный процесс (4. Спиральная модель)
- Итеррационный процесс ( модель Унифицированных процессов)

Линейные процессы - это линейная модель разработки ПО состоящая
из последовательных шагов, без их перечисления по времени, результатом
которых является програмный продукт.
Линейные модели разработки хорошо работают, когда требования полностью 
понятны и стабильны, план-график не слишком напряжный, достаточно ресурсов,
а методики хорошо документированы.

1. Каскадная модель / Водопад - классическая модель жизненного цикла 
разработки ПО. Она включает последовательность шагов, ведущих от анализа
к проектированию, кодированию и далее к интеграционному и системному 
тестированию.
Следуя каскадной модели, разработчик переходит от одной стадии к другой 
строго последовательно, без возможности вернутся к предыдущим фазам.

Преймущества каскадной модели:
- Разработку просто контролировать. Заказчик всегда знает, чем сейчас 
заняты програмисты, может управлять сроками и стоимостью.
- Стоимость проекта определяется на начальном этапе. Все шаги запланированы 
уже на этапе согласования договора, ПО пишется непрерывно от начала до конца.
- Не нужно нанимать тестировщиков с серьезной технической подготовкой.
Тестировщики могут опираться на подробную техническую документацию.

Каскадная модель уделяет огромное время именно документации. 
Она требует что бы каждый шаг был задокументирован от А до Я и что бы не 
возникало между этапами никаких недопониманий.

Один из главных недостатков модели Вотерфол это то что мы не можем вернуться 
на прошлый этап. Так же клиент очень мало вовлечен в процесс разработки,
так как он видит продукт в самом конце. 

2. V-образная модель - эта модель похожа на модель ВОТЭРФОЛ, но происходит
с другой последовательностью. Задачи разработки идут сверху вниз, а задачи
тестирования с низу вверх.
V-образная модель базуруется на том, что
- Приемо-сдаточные испытания основываются, прежде всего, на требованиях.
- Системное тестирование - на требованиях и архитектуре.
- Комплексное тестирование - на требованиях, архитектуре и интерфейсах.
- Компонентное тестирование  - на требованиях, архитектуре, интерфейсах и 
  алгоритмах.

Плюсы этой модели - возможность тестировать каждый этап разработки.
Недостаток:
Так же как и в первой модели клиент очень мало вовлечен в процесс разработки.

Для возможности контроля этапов разработки со стороны заказчика, была 
разработана Пилообразная модель.

3. Пилообразная модель похожа на первые две модели. Единственное различие 
между ними состоит в том, что прототипы создаются и показываются на 
валидации между критическими фазами.
Прототипы присутсвуют сразу после этапа анализа и между этапами 
проектирования и внедрения. Убедившись, что клиент получает информацию
о ходе работы, контрольные точки должны гарантировать, что разработка
идет в правильном направлении.

Все эти три модели объединяет последовательность этапов. 
Это является как преймуществом так и не достатком (невозможность вернуться 
на прошлые шаги)
Эти модели простые в использовании, но они не всегда могут удачными.
Эти модели широко используются при создании ПО, которое уже неоднократно
создавалось ранее, с известной документацией, инструкциями и стандартом.
(Например производство по ГОСТУ). 

10.23 (3)