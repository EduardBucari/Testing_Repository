Urork 3
 
 Tipi testirovania (deistvuiut na vseh urovniah testirovania):
 1. Functionalinoe ( cito delaet PO).
 2. Ne functionalinoe (kak rabotaet PO).
 3. Structurnoe testirovanie (belii iashik) na vseh urovniah.
 4. Testirovanie sviazanoe s izmeneniiami.
 -----------

 1. Functionalinoe ( cito delaet PO)
 teli - sistema imeet vse nujnie functii
 i rabotaet ot naciala do konta.
 (ficha - opredelennii functional).
 
 Preimushestva:
 simuliatia realinogo ispolizovania.
 vipolnenie v ruchinom rejime.
  Nedostatki:
 Logiceskie oshibki
 Izbitocinoe i mnogokratnoe testirovanie.
---

 2. Ne functionalinoe (kak rabotaet PO)
 Nadejnosti, efectivniosti, iuzabiliti,
 podderjivaemosti, perenosimosti.
 Testirovanie dokumentatii, 
 
 Baseline testirovanie - testirovanie trebovanii i dokumentatii.
 Compliance testing - sobliudenie standartov.
 
 Vidi documentatii:  test keis, bug report, test plan, test report.
 
 Maintainability testing - ispravliaesh bag i poluciaesh eshe mnogo drugiv bagov,
 zadacia blije k programirovaniu.
 
 Usability testing - otdelinii protes:
 - Legkosti ispolizovania prilojenia.
 - bisrtrota rezulitata
 - zapominaemosti,
 - poniatnii interfeis,
 - udovletvorenosti (nravitsia ili net)
 
 Portability testing - rabota na raznih operationnih sistemah.
 (cross-browser and cross-platform) osobenno dlia mobilinih ustroistv.
 
 Configurationnaia sistema - dlia SOVMESTIMOSTI raznih PO.
 - Conversion - perehod na drugui bazu dannih,
 - cross-browser and cross-platform.
 
 Performance testing - testirovanie proizvoditelinosti:
 stress testing, load testing
 
 Mashtabiruemosti - vozmojnosti uvelicenie polizovatelei
 Obiemnoe testirovanie - vozmojnoti hraniti mnogo dannih
 Endurance testing - dlitelinaia nagruzka.
 Ramp testing - vinoslivosti na vremia i uvelicenie.

 ++++
 LOAD TESTING - emitatia ojidaemoi nagruzki do maximuma.
 STRESS TEST - testirovanie nagruzki za predeli dopustimogo.
 RECOVERY TEST - pri kakoi nagruzki lomaetsia i kak dolgo vostanavlivaemosti.
 (izcez internet).
 
 Reliability testing - dlitelinaia rabota bez sboev.
 
 Security testing - otdelinaia tema (net dostupa drugim)
 Penetration - Simuliatia ataki (eticinii haking)
 Vulnerability - poisk uiazvimih mest v programe.
---------

 3. Structurnoe testirovanie (belii iashik) na vseh urovniah.
 proverka koda na oshibki i realizatiu functii.

Preimushestva i nedostatki:
Optimizatia koda i ocistka ot mertvogo koda.
Dorogo, 
-------------
 
 4. Testirovanie sviazanoe s izmeneniiami (90 % vremeni raboti testirovshika):
     4.1 Smoke testing.
     4.2 Sanity testeng.
     4.3 Regresionnoe i podtverjdaiushee testirovanie.
 
 4.1 Smoke testing (pered perehodom k detalinomu testirovaniu)
 (bilid verification)- sborka zasluzivaet cito na nee nujno 
 tratiti dalishe vremia i denigi (proverka osnovnogo functionala).
 - test zavisit ot slojnosti
 - toliko pozitivnoe testirovanie.
 - bolishoi ohvat programi no gluboko ne kapaem.
Primer: protestirovati vse nujnie functii:
+++++ login, paroli, dobaviti, meniati, udaliati i sohraniti zapisi.
- ciasto avtomatiziruetsia, pomogaet proveriati integratiu komponentov,
nahodit starie defekti i ekonomit vremia. 
Vipolnietsia kak programistami tak i testirovshikami.

Nedostatki:
Ne detalinoe i ogranicennoe testirovanie,
Toliko positivnoe testirovanie, net negativnih stenariev.
teli opredeliti stabilnosti.
(sravnenie - vizit k obshemu vraciu)

4.2 Sanity testeng - sanitarnoe testirovanie (zdravomislie)
(proveriti cito novaia zborka bila sozdana ne zria.)
Teli - opredeliti cito novaia sborka imeet novie i rabocie dopolnenie i izmenenia.
Bolee glubokoe cem SMOKE testirovanie i bolee uzkoe testirovanie.
+ Ekonomit vremia, provoditsia pered osnovnim testirovaniem, 
mojet podrobno ne dokumentirovatisia, najodit propushennie oshibki.
Teli - opredeliti rationalinosti vnesennih izmenenii. 
Vipolniaetsia toliko testirovshikami.
(sravnenie - vizit k konkretnomu vraciu)

4.3 Regresionnoe testirovanie.
Teli - sistema ne stala huje posle vnesenia izmenenii.
Testirovanie vseh funktii sistemi.
Nacinaetsia s izmenenoi sistemi i zatem proverka proishodit po vsei
sisteme ili vibrannimi ciastiami.

4.4. Podtverjdaiushee testirovanie.
----------------

Urovni testirovania:
1. Unit testing (vipolniaiutsia programistami).
2. Component testing (Modulinoe)
3. Integrationnoe testirovanie (Komponentnoe i sistemnoe).
4. Sistemnoe testirovanie.
5. Priemocinoe testirovanie (vse li trebovania bili vipolneni)
   (alfa, beta - no ne fakt).

podhodi k vipolneniu testov:
- belii iashik. (unit test)
- serii iasahik (komponentnoe i integrationnoe testirovanie)
- cernii iashik (sistemnoe i priemocinoe testirovanie)



DZ. Sdelati chek list (nefunktionalinoe testirovanie)
===================================================================