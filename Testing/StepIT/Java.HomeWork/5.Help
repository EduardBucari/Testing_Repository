package stepIT.homeWork;

/*
Задание:
Создать справочную систему, предоставляющую сведения
о синтаксисе управляющих операторов Java.

Программа, реализующая эту справочную систему, отображает
меню с названиями операторов и ожидает выбора одного из них.
Как только пользователь выберет один из пунктов меню,
на экран будут выведены сведения о синтаксисе соответствующего оператора.

Для выхода из прграммы используется клавиша q
 */

/*
Реализация справочной программы Help
 */
public class Help {
    /*
    В классе Help определены три метода: helpon(), showmenu() и isvalid().
     */

    /*
    Метод helpon() принимает в качестве аргумента число,
    соответствующее пункту меню, и отображает информацию
    о синтаксисе оператора, соответствующего выбранному пункту.

     */
    void helpon(int what) {
        switch (what) {
            case '1':
                System.out.println("Оператор if:\n");
                System.out.println("if(условие) оператор;");
                System.out.println("else оператор;");
                break;
            case '2':
                System.out.println("Оператор switch:\n");
                System.out.println("switch(выражение) {");
                System.out.println(" case константа:");
                System.out.println(" последовательность операторов");
                System.out.println(" break;");
                break;
            case '3':
                System.out.println("Оператор for:\n");
                System.out.println("for(инициализация; условие; итерация)");
                System.out.println(" опреатор;");
                break;
            case '4':
                System.out.println("Оператор while:\n");
                System.out.println("while(условие) оператор;");
                break;
            case '5':
                System.out.println("Оператор do-while:\n");
                System.out.println("do {");
                System.out.println(" оператор;");
                System.out.println("} while (условие};");
                break;
            case '6':
                System.out.println("Оператор break:\n");
                System.out.println("break; или break метка;");
                break;
            case '7':
                System.out.println("Оператор continue:\n");
                System.out.println("continue; или continue метка;");
                break;
            default:
                System.out.println("Запрос не найден.");
        }
        System.out.println("--------------------------------");
    }

    /*
     Метод showmenu отображает меню-справку операторов от1 до 7
     */
    void showmenu() {
        System.out.println("Справка:");
        System.out.println("1. if");
        System.out.println("2. switch");
        System.out.println("3. for");
        System.out.println("4. while");
        System.out.println("5. do-while");
        System.out.println("6. break");
        System.out.println("7. continue\n");
    }

    /*
    Метод isvalid реализует цикл, который проверяет
    валидность вводимых значений от 1 до 7
    и завершается при вводе символа q.
     */
    boolean isvalid(int ch) {
        if (ch < '1' || ch > '7' && ch != 'q') {
            return false;
        }
        return true;
    }
}

class HelpClassDemo {
    public static void main(String[] args) throws java.io.IOException {
        Help hlpobj = new Help();
        char choice, ignore;

        for(;;) {
            do {
                hlpobj.showmenu();
                choice = (char) System.in.read();

                do {
                    ignore = (char) System.in.read();
                } while (ignore != '\n');
            } while (!hlpobj.isvalid(choice));

            if (choice == 'q') {
                break;
            }
            System.out.println("\n");
            hlpobj.helpon(choice);
        }
    }
}