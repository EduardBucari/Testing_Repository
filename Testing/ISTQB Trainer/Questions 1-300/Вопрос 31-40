31. Какие тестовые походы или стратегии характеризуют описания ниже?

1. Тестирование на основе процесса - Придерживается отраслевого стандарта.
2. Эвристическая оценка - Запускает одновременное выполнение теста и оценку.
3. Консультационный подход - Слушать советы по технологиям от экспертов.
4. Анти-регрессионное тестирование - Включает переиспользование существующих 
тестовых материалов.
--------------------

32. Какой принцип НАИЛУЧШИМ образом подходит под описание, когда тесты 
проектируются и пишутся третьей стороной?
- Независимое тестирование.
--------------------

33. Что является преимуществом независимости теста?
- Это позволяет избежать предвзятости автора, при определении эффективных тестов.
--------------------

34. Что из перечисленного является НАИБОЛЕЕ подходящей характеристикой 
для методов, основанных на спецификации (черный ящик).
- Сценарии получаются систематически из моделей системы.
--------------------

35. Какие из перечисленных высказываний корректно описывают правильный подход 
к компонентному тестированию?
- Функциональное тестирование компонента в изоляции.
- Структурное тестирование кода без учета инцидентов.
- Автотесты на компонент выполняются до тех пор, пока не пройдут.
---------------------

36. Что из перечисленного является главной задачей контроля тестирования?
- Инициирование корректирующих активностей.
---------------------

37. Как называется скелетная реализация программного компонента, 
которая используется для тестирования?
- Заглушка.
---------------------

38. Что является лучшим определением для полного тестирования?
- Вы протестировали все комбинации входных данных и предусловий.
---------------------

39. Полное покрытие операторов и ветвей означает
- Вы протестировали каждый оператор и каждую ветвь в программе.
---------------------

40. Существует несколько рисков управления вашим проектным графиком с помощью 
модели статистической надежности. Выберите из перечисленных:
(Все перечисленное)

- Тестировщики тратят больше времени на раннем этапе продукта, 
чтобы найти ошибки, чем на подготовку, чтобы сделать остальные проектные 
дела с большей эффективностью.

- Менеджеры возможно не понимают, что усилия тестирования не эффективны в конце 
проекта, потому что они ожидают низкого уровня обнаружения ошибок, 
поэтому низкая скорость не вызывает у них тревоги.

- Это может увеличить давление на тестировщиков в конце проекта, чтобы они 
не находили ошибки, либо не писали баг репорты.