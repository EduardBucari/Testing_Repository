Независимость тестирования.
Уровни независимости тестирования (от низкого до высокого):
1. Нет независимых тестировщиков; разработчики тестируют собственный код, 
других форм тестирования нет. 
2. Независимые разработчики или тестировщики в команде разработки 
или в команде проекта (разработчики, тестирующие продукты своих коллег).
3. Независимая команда или группа тестирования внутри организации, 
отчитывающаяся перед руководством проекта или руководством организации.
4. Независимые тестировщики из организации заказчика. 
5. Независимые тестировщики, внешние по отношению к организации, работающие 
либо на территории компании (инсорсинг), либо вне ее (аутсорсинг).
------

Руководитель тестирования отвечает за процесс тестирования и 
успешное руководство активностями тестирования.

Задачи руководителя тестирования:
1. Разработкa тестовой политики и стратегии.
2. Планирование тестирования.
3. Составление и обновление планов тестирования.
4. Согласование планов тестирования с руководителями проектов, 
5. Координация активностей тестирования.
6. Инициирование анализа, разработки, реализации и выполнения тестов, 
отслеживание прогресса и результатов тестирования, контроль выполнения 
критериев выхода (или критериев готовности).
7. Подготовка и предоставление отчетов о статусе тестирования.
8. Адаптация планов в зависимости от прогресса и результатов тестирования 
и выполнение действий, необходимых для контроля тестирования.
9. Поддержка настройки системы управления дефектами и конфигурацией 
тестового обеспечения.
10. Выбор подходящих метрик для измерения результатов тестирования и 
оценки качества процесса тестирования и продукта.
11. Выбор и внедрение инструментов поддержки процесса тестирования, включая: 
- рекомендации по выбору инструментария, 
- выделение времени и трудозатрат для пилотных проектов, 
- обеспечение постоянной поддержки в использовании инструментов.
12. Решениe о создании тестовой среды.
13. Демонстрация ценности тестировщиков, группы тестирования и профессии 
тестировщика в организации.
14. Развитие навыков и карьеры тестировщиков (например, посредством планов 
обучения, оценки эффективности, коучинга и т.д.)
------

Задачи тестировщика:
1. Рецензирование и разработка планов тестирования.
2. Анализ, рецензирование и оценка требований, пользовательских историй 
и критериев приемки.
3. Определение и документирование тестовых условий, установление связей 
между тестовыми сценариями, тестовыми условиями и базисом тестирования.
4. Проектирование, настройка и проверка тестовой среды, зачастую вместе с 
системным администрированием и управлением сетью.
5. Проектирование и разработка тестовых сценариев и процедур тестирования.
6. Подготовка и получение тестовых данных.
7. Создание подробного расписания выполнения тестов.
8. Выполнение тестирования, оценка результатов и документирование отклонений 
от ожидаемых результатов.
9. Использование соответствующих инструментов поддержки процесса тестирования.
10. Автоматизация процесса тестирования по мере необходимости 
(может поддерживаться разработчиком или экспертом по автоматизации тестирования).
11. Оценка нефункциональных характеристик, таких как производительность, 
надежность, практичность, безопасность, совместимость и переносимость.
12. Рецензирование тестов, разработанных другими тестировщиками.
------

Планирование и оценка тестирования сосотоит из:

1. Цель и содержание плана тестирования.
Цель Планирования тестирования - непрерывная деятельность, которая выполняется 
в течение всего жизненного цикла продукта (включая фазу сопровождения).
План тестирования включяает:
    1. Определение объема, целей и рисков тестирования.
    2. Определение общего подхода к тестированию.
    3. Координацию работ по тестированию и их совмещение с другими работами 
       в рамках жизненного цикла программного обеспечения.
    4. Принятие решений о том, что тестировать, кто будет выполнять тестирование 
       и как должны выполняться работы по тестированию.
    5. Планирование анализа, проектирования, реализации и выполнения тестов, 
       оценки результатов тестирования с указанием сроков либо итераций.
    6. Выбор метрик для мониторинга и контроля тестирования.
    7. Формирование бюджета тестирования.
    8. Определение структуры и уровня детализации тестовой документации 
       (например, путем предоставления шаблонов или примеров документов).

2. Стратегия тестирования и подходы к тестированию.
Стратегия тестирования содержит описание процесса тестирования.
Подход к тестированию адаптирует стратегию к конкретному проекту или релизу.
    Типы стратегий тестирования:
    1. Аналитический подход: Тестирование, основанное на рисках, при котором тесты 
       разрабатываются по приоритетам в зависимости от уровня риска.
    2. Тестирование на основе моделей: (бизнес-процессов, 
       модели состояния и модели роста надежности).
    3. Методический подход: классификация общих или вероятных типов отказов, 
       список важных характеристик качества.
    4. Тестирование на основе процесса: анализ, проектирование и 
       выполнение тестов в соответствии с внешними правилами или стандартами.
    5. Направленный (или консультативный) подход: советы руководства или инструкции 
       заинтересованных сторон, экспертов предметной области или экспертов по технологиям.
    6. Тестирование на основе минимизации регресса: подразумевает повторное 
       использование существующего тестового обеспечения (особенно тестовых сценариев 
       и тестовых данных), обширную автоматизацию регрессионных тестов и стандартные наборы тестов.
    7. Реактивный подход: (не является спланированным заранее - Исследовательское тестирование).

3. Критерии входа и выхода (критерии готовности и критерии завершения).

    ● Критерии входа (или критерии готовности в гибкой разработке) 
      определяют условия, которые должны быть выполнены до начала работ:
    1. Доступность тестируемых требований, пользовательских историй и моделей. 
    2. Наличие элементов тестирования, которые удовлетворяют критериям выхода 
       для предыдущих уровней тестирования.
    3. Доступность тестовой среды.
    4. Наличие необходимых инструментов тестирования.
    5. Наличие тестовых данных и других необходимых ресурсов.

    ● Критерии выхода (или критерии завершения в гибкой разработке) 
      определяют, какие условия должны быть выполнены, чтобы завершить уровень 
      тестирования или набор тестов.
    1. Выполнение запланированных тестов.
    2. Достижение определенного уровня покрытия 
       (например, требований, пользовательских историй, критериев приемки, рисков, кода).
    3. Количество открытых дефектов ниже оговоренного порогового значения.
    4. Низкая оценка количества еще не обнаруженных дефектов.
    5. Соответствие требуемым значениям оценок надежности, производительности, 
       практичности, безопасности и других характеристик качества.

4. Расписание выполнения тестов.
   Pасписанием тестирования задает последовательность их выполнения.
   Расписание должно учитывать такие факторы как: 
    - приоритет, 
    - зависимости между тестами и/или тестируемыми функциями, 
    - необходимость выполнения подтверждающих и регрессионных тестов,
    - наиболее эффективную последовательность выполнения тестов.

5. Факторы, влияющие на затраты на тестирование:
    1. Характеристики продукта.
    2. Характеристики процесса разработки.
    3. Характеристики людей.
    4. Результаты тестирования.

6. Методы оценки затрат на тестирование.
    1. Метод, основанный на метриках: оценка затрат, использующая метрики 
       ранее выполненных проектов или типовые значения.
    2. Метод экспертной оценки: оценка затрат на основе опыта или экспертов.
------

Контроль и мониторинг тестирования.
Цель мониторинга тестирования заключается в сборе информации и обеспечении 
обратной связи о состоянии тестирования.
Контроль тестирования представляет собой любые корректирующие действия, 
предпринятые на основании полученной информации или метрик.

Метрики тестирования.
Метрика тестирования программного обеспечения — это критерий для отслеживания 
эффективности усилий по обеспечению качества. 
Сначала вы устанавливаете показатели успеха на этапе планирования. 
Затем сравниваете их с полученной метрикой после завершения процесса.

Метрики могут собираться во время и после завершения тестирования, чтобы оценить:
● Прогресс относительно запланированного графика и бюджета.
● Текущее качество объекта тестирования.
● Адекватность подхода к тестированию.
● Эффективность активностей тестирования по достижению целей тестирования.

    Mетрики тестирования включают:
    1. Процент выполненных работ по подготовке тестовых сценариев 
       (или процент разработанных тестовых сценариев).
    2. Процент выполненных работ по подготовке тестовой среды.
    3. Метрики выполнения тестов: 
       - количество выполненных/невыполненных тестовых сценариев, 
       - количество тестовых условий или сценариев, выполненных успешно/неуспешно.
    4. Информацию о дефектах: 
       - плотность дефектов, 
       - количество обнаруженных и исправленных дефектов, 
       - частоту отказов, 
       - результаты подтверждающих тестов.
    5. Покрытие тестами требований, пользовательских историй, 
       критериев приемки, рисков или кода.
    6. Информацию о выполнении задач, распределении и использовании ресурсов, 
       трудозатратах.
    7. Стоимость тестирования, включая сравнение стоимости с выгодой от нахождения 
       следующего дефекта или от выполнения следующего теста.

Отчет о тестировании.
Цель отчетности - предоставление информации по итогам и во время тестирования.
- Отчет подготовленный во время тестирования - называется отчетом о ходе тестирования.
- Oтчет подготовленный по итогам - называется итоговым отчетом о тестировании.

Oтчет о ходе тестирования включает:
    1. Статус активностей тестирования и прогресс по сравнению с планом тестирования.
    2. Факторы, препятствующие прогрессу.
    3. Тестирование, запланированное на следующий отчетный период.
    4. Качество объекта тестирования.

Итоговые отчеты о тестировании включают:
    1. Резюме проведенного тестирования.
    2. Информацию о том, что произошло во время тестирования.
    3. Информацию об отклонениях от плана, включая отклонения в расписании, 
       длительности выполнения или затратах.
    4. Информацию о качестве тестирования и качестве продукта с точки зрения 
       критериев выхода или критериев завершения.
    5. Информацию о факторах, которые блокировали или продолжают блокировать 
       тестирование.
    6. Метрики дефектов, тестовых сценариев, покрытия, прогресса тестирования 
       и использования ресурсов.
    7. Информацию об остаточных рисках.
    8. Перечень тестовых артефактов, которые можно повторно использовать.
------

Управление конфигурацией - это обеспечение целостности компонента или системы
и их взаимосвязей между собой на протяжении всего жизненного цикла продукта.
------

Риски и тестирование.
Риск подразумевает наступление некоторого негативного события в будущем. 
Уровень риска можно определить через вероятность события и 
серьезность последствий. Ранний анализ рисков способствует успеху проекта.

    1. Риски продукта - связанны с конкретными характеристиками качества:
       (функциональной пригодностью, надежностью, производительностью, практичностью, 
        безопасностью, совместимостью, сопровождаемостью, переносимостью).
       Риск продукта также называют рисками качества.

    2. Риски проекта - связаны с событиями, препятствующими достижению целей проекта.
       1. Проектные проблемы.
       2. Организационные проблемы.
       3. Политические проблемы.
       4. Технические проблемы.
       5. Проблемы с поставщиками.

    3. Тестирование, основанное на рисках, и качество продукта.
       Тестирование, основанное на рисках, обеспечивает возможность заранее снизить 
       уровень риска продукта.
       включает: 
       - анализ рисков продукта,
       - идентификацию рисков, 
       - оценку вероятности, последствий от их наступления.
------

Управление дефектами.
Oтчеты о дефектах имеют цели:
1. Предоставлять разработчикам и другим сторонам информацию о произошедших 
негативных событиях: 
- чтобы они могли определить побочные эффекты, 
- изолировать проблему с минимальными затратами на воспроизведение, 
- исправить потенциальные дефекты по мере необходимости.
2. Обеспечить руководителей тестирования инструментами отслеживания качества 
продукта и влияния на тестирование.
3. Предоставить идеи для совершенствования процессов тестирования и разработки.

Cообщения о дефектах так же называются сообщениями об инцидентах.
● Сообщение о дефекте, созданное во время динамического тестирования, включает:
    1. Идентификатор дефекта.
    2. Заголовок и краткое описание найденного дефекта.
    3. Дату сообщения о дефекте, информацию об авторе сообщения.
    4. Идентификацию элемента тестирования и среды.
    5. Фазу жизненного цикла разработки, в которой обнаружен дефект.
    6. Описание дефекта, достаточное для его воспроизведения и принятия решения, 
       включая: системные журналы, скриншоты, дампы базы данных, 
       записи созданые во время выполнения теста.
    7. Ожидаемые и фактические результаты.
    8. Область или степень влияния дефекта на интересы заинтересованной стороны 
       (критичность).
    9. Срочность для исправления (приоритет).
    10. Статус дефекта: (открыт, отложен, дубликат, ожидает исправления, 
    ожидает проверки, повторно открыт, закрыт).
    11. Выводы, рекомендации и согласования.
    12 Глобальные проблемы, например, области, которые будут затронуты 
       исправлением дефекта.
    13. История изменений.
    14. Ссылки, включая ссылку на тестовый сценарий, который обнаружил дефект.