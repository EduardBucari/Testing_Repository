2.1.2. Итерационные и инкрементальные модели разработки.
       Iterative and incremental development models.
       (incrementally - постепенно).

Инкрементальная разработка подразумевает определение требований, дизайн, 
сборку и тестирование системы по частям, это приводит к тому, 
что функциональность ПО растет постепенно. 
Incremental development involves establishing requirements, designing, 
building, and testing a system in pieces, which means that the 
software’s features grow incrementally.

Итеративная разработка используется в случае, когда разрабатываемый 
функционал должен быть определен, спроектирован, построен и протестирован 
в течение нескольких этапов, зачастую с фиксированной продолжительностью 
каждого из них.
Iterative development occurs when groups of features are specified, 
designed, built, and tested together in a series of cycles, 
often of a fixed duration. 

Итерационные и инкрементальные модели разработки:
Iterative and incremental development models:

1. RUP (Rational Unified Process) методология - каждая итерация может быть 
относительно долгой (например, от двух до трех месяцев), а приращения 
функциональности соответственно большими, к примеру, две или три группы 
связанных функциональностей.
   Rational Unified Process: Each iteration tends to be relatively 
long (e.g., two to three months), and the feature increments are 
correspondingly large, such as two or three groups of related features.
(e.g. - exampleli gratia - «например»)
(i.e. -  обозначает латинскую фразу id est - «то есть» или «другими словами»).

2. Scrum: каждая итерация может быть относительно короткой 
(например, часы, дни или несколько недель), а приращения функциональности 
соответственно небольшими, как, например, несколько улучшений и/или две 
или три новые функции.
   Scrum: Each iteration tends to be relatively short 
(e.g., hours, days, or a few weeks), and the feature increments are 
correspondingly small, such as a few enhancements and/or two 
or three new features.

3. Kanban: осуществляется с использованием или без использования итераций 
фиксированной продолжительности, по завершению которых выпускается либо 
единственная доработка или функциональность, либо группа функциональностей, 
объединенных вместе.
   Kanban: Implemented with or without fixed-length iterations, which can 
deliver either a single enhancement or feature upon completion, or can group 
features together to release at once.

4. Спиральная модель разработки (прототипирование): подразумевает создание 
экспериментальных приращений, некоторые из которых могут быть значительно 
переработаны или даже отвергнуты в последующей работе по разработке.
   Spiral (or prototyping): Involves creating experimental increments, 
some of which may be heavily re-worked or even abandoned in subsequent 
development work.

Компоненты или системы, разрабатываемые с использованием этих моделей, 
часто подразумевают пересечение и повторение уровней тестирования на 
протяжении процесса разработки.
Components or systems developed using these methods often involve 
overlapping and iterating test levels throughout development.
-----------------------

Выбор модели жизненного цикла разработки в зависимости от ситуации.
Software Development Lifecycle Models in Context.

Соответствующая модель жизненного цикла разработки должна быть выбрана 
и адаптирована на основе цели проекта, типа разрабатываемого продукта, 
бизнес-приоритетов (например, срок вывода продукта на рынок), 
и выявленных рисков продукта и проекта. 
An appropriate software development lifecycle model should be selected 
and adapted based on the project goal, the type of product being developed, 
business priorities (e.g., time-to-market), and identified product 
and project risks.